services:
  # DISCOVERY SERVER
  eurekaserver:
    build:
      context: ./eurekaserver
      dockerfile: Dockerfile
    container_name: eurekaserver
    hostname: eurekaserver
    ports:
      - "8761:8761"
    networks:
      - ms-network

  # API GATEWAY
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    hostname: gateway
    depends_on:
      - eurekaserver
    environment:
      - TZ=America/Sao_Paulo
    ports:
      - "8080:8080"
    networks:
      - ms-network
    
  # BANCO DE DADOS
  db:
    image: postgres:15-alpine
    container_name: postgres-mstask
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_task
      TZ: America/Sao_Paulo
    ports:
      - "5432:5432"
    volumes:
      - postgres_task_data:/var/lib/postgresql/data
    networks:
      - ms-network
    
  # SEGURANÇA
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: keycloak
    command:
      - start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8082:8080"
    networks:
      - ms-network


  # MICROSERVIÇOS
  mstask:
    build:
      context: ./task
      dockerfile: Dockerfile
    container_name: mstask
    hostname: mstask
    depends_on:
      - eurekaserver
      - db
      - rabbitmq
    environment:
      - TZ=America/Sao_Paulo
    ports:
      - "8085:8085"
    networks:
      - ms-network

  msnotification:
    build:
      context: ./notification
      dockerfile: Dockerfile
    container_name: msnotification
    hostname: msnotification
    depends_on:
      - eurekaserver
    env_file:
      - ./notification/.env
    networks:
      - ms-network
  
  msworker:
    build:
      context: ./task-overdue-checker
      dockerfile: Dockerfile
    container_name: msworker
    hostname: msworker
    depends_on:
      - eurekaserver
      - db
      - rabbitmq
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - ms-network

  # FILA DE MENSAGENS
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      TZ: America/Sao_Paulo
    ports:
      - "5672:5672"   # porta padrão de mensagens
      - "15672:15672" # painel de controle web
    networks:
      - ms-network

  # OBSERVABILITY / LOGS
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yml
      - loki-data:/loki
    networks:
      - ms-network

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./loki/promtail-config.yml:/etc/promtail/config.yml
    networks:
      - ms-network
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - ms-network
    depends_on:
      - loki
    volumes:
    - grafana-data:/var/lib/grafana

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - ms-network
    depends_on:
      - gateway
      - mstask
      - msnotification
      - msworker

  # Métricas / Tracing  
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - ms-network


# NETWORKS
networks:
  ms-network:
    driver: bridge

# VOLUMES
volumes:
  postgres_task_data:
  grafana-data:
  loki-data:
