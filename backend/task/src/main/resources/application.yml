spring:
  application:
    name: mstask
  datasource:
    url: jdbc:postgresql://db:5432/db_task
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: admin
    password: admin

server:
  port: 0

management:
  server:
    port: 8085
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0  # Captura todas as requisições (ideal para dev)
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans

eureka:
  client:
    service-url:
      defaultZone: http://eurekaserver:eurekaserver@eurekaserver:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    health-check-url: http://mstask:8085/actuator/health
    status-page-url: http://mstask:8085/actuator/info

app:
  rabbitmq:
    exchange: task.exchange
    queue: task.overdue.queue
    routing-key: task.overdue

logging:
  level:
    root: INFO
  pattern:
    console: '{"timestamp":"%d{yyyy-MM-dd HH:mm:ss}","level":"%p","service":"${spring.application.name}","message":"%m"}%n'